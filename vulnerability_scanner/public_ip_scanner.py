import os
import shodan
import socket
import nmap

# Function to get Shodan API key from environment variable
def get_shodan_api_key():
    return os.getenv('SHODAN_API_KEY')

# Function to perform network scan with Nmap
def nmap_scan(ip_range):
    scanner = nmap.PortScanner()
    vulnerabilities = {}

    for ip in ip_range:
        try:
            print(f"Scanning {ip} with Nmap...")
            scanner.scan(ip, '22,80,443')  # Scan ports 22 (SSH), 80 (HTTP), and 443 (HTTPS)
            if 'tcp' in scanner[ip]:
                open_ports = [port for port, details in scanner[ip]['tcp'].items() if details['state'] == 'open']
                vulnerabilities[ip] = open_ports
            else:
                print(f"No open ports found for {ip}")
        except Exception as e:
            print(f"Error scanning {ip} with Nmap: {e}")

    return vulnerabilities

# Function to check for vulnerabilities using Shodan API
def shodan_vulnerabilities(ip_range):
    api_key = get_shodan_api_key()
    if not api_key:
        print("API key is not set. Please set the SHODAN_API_KEY environment variable.")
        return
    
    api = shodan.Shodan(api_key)
    vulnerabilities = {}

    for ip in ip_range:
        try:
            print(f"Checking vulnerabilities for {ip} using Shodan...")
            host = api.host(ip)
            open_ports = []

            for item in host['data']:
                if item['port'] in [22, 80, 443]:
                    open_ports.append(item['port'])

            if open_ports:
                vulnerabilities[ip] = open_ports
            else:
                print(f"No relevant open ports found for {ip} on Shodan.")
        except shodan.APIError as e:
            print(f"Error scanning {ip} with Shodan: {e}")
    
    return vulnerabilities

# Function to combine Nmap and Shodan vulnerability data
def check_vulnerabilities(ip_range):
    print("Starting vulnerability scan...")

    # Nmap scan
    nmap_vulns = nmap_scan(ip_range)
    print("Nmap scan completed.")
    
    # Shodan scan
    shodan_vulns = shodan_vulnerabilities(ip_range)
    print("Shodan scan completed.")

    # Combine and display results
    for ip in ip_range:
        print(f"\nResults for IP {ip}:")
        
        nmap_open_ports = nmap_vulns.get(ip, [])
        shodan_open_ports = shodan_vulns.get(ip, [])
        
        if nmap_open_ports:
            print(f"  Open ports from Nmap: {nmap_open_ports}")
        else:
            print("  No open ports found in Nmap.")
        
        if shodan_open_ports:
            print(f"  Open ports from Shodan: {shodan_open_ports}")
        else:
            print("  No open ports found in Shodan.")
    
    print("Vulnerability check completed.")

# Example usage: scanning a small IP range
ip_range = ['192.168.1.9]
check_vulnerabilities(ip_range)

