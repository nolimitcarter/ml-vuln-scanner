import joblib
import numpy as np
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split

# Example training data (replace with your actual data)
# Assuming features and labels are in numpy arrays
X = np.array([[1, 2], [2, 3], [3, 4], [4, 5], [5, 6]])  # Features (e.g., system/network data)
y = np.array([0, 1, 0, 1, 0])  # Labels (e.g., 0 = No vulnerability, 1 = Vulnerability found)

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the model using Random Forest (you can choose a different algorithm if needed)
model = RandomForestClassifier()
model.fit(X_train, y_train)

# Evaluate the model (optional)
accuracy = model.score(X_test, y_test)
print(f"Model accuracy: {accuracy * 100:.2f}%")

# Save the model to a file (so that you can load it later in your scanner)
joblib.dump(model, 'vulnerability_model.pkl')
print("Model trained and saved as 'vulnerability_model.pkl'")
