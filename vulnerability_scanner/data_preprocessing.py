import logging
import re

def is_valid_ip(ip):
    # A simple check to validate the format of an IP address
    ip_pattern = r"^(?:\d{1,3}\.){3}\d{1,3}$"
    return re.match(ip_pattern, ip) is not None

def preprocess_data(raw_data):
    logging.info("Data before preprocessing:")
    logging.debug(raw_data)
    
    processed_data = []
    
    for i, row in enumerate(raw_data):
        logging.info(f"Processing row {i}: {row}")
        ip = row.get("ip")
        
        if is_valid_ip(ip):
            processed_data.append(row)
        else:
            logging.warning(f"Invalid IP found at index {i}: {ip}")
            row['ip'] = 'invalid_ip'  # Mark invalid IP as 'invalid_ip'
            processed_data.append(row)
    
    logging.info("Processed Data:")
    logging.debug(processed_data)
    
    return processed_data
